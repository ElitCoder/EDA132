package model;

import java.util.ArrayList;
import java.util.Random;

import control.EstimatorInterface;

public class DummyLocalizer implements EstimatorInterface {
	private State currentState;
	private int rows, cols, head;
	private int trueX, trueY;

	public DummyLocalizer( int rows, int cols, int head) {
		this.rows = rows;
		this.cols = cols;
		this.head = head;
		this.trueX = cols/2;
		this.trueY = rows/2;
	}	
	
	public int getNumRows() {
		return rows;
	}
	
	public int getNumCols() {
		return cols;
	}
	
	public int getNumHead() {
		return head;
	}
	
	public double getTProb( int x, int y, int h, int nX, int nY, int nH) {
		return 0.0;
	}

	public double getOrXY( int rX, int rY, int x, int y) {
		return 0.1;
	}

	public int[] getCurrentTruePosition() {
		int[] ret = new int[2];
		ret[0] = trueY;
		ret[1] = trueX;
		return ret;

	}
	
	private boolean illegalPosition(int x, int y) {
		return x < 0 || x > cols - 1 || y < 0 || y > rows - 1;
	}
	
	private ArrayList<int[]> getNeighbours(int x, int y) {
		ArrayList<int[]> neighbours = new ArrayList<int[]>();
		
		for(int i = -1; i < 1; i++){
			for(int j = -1; j < 1; j++) {
				if(i == 0 && j == 0){
					continue;
				}
				if(!illegalPosition(x-i, y-j)){
					neighbours.add()
				}
			}
		}
		if(!illegalPosition(x-1, y-1)){
			
		}
	}
	
	private int n_Ls() {
		if(trueX == 0 && trueY == 0 || trueX == cols - 1 && trueY == 0 || trueX == cols - 1 && trueY == rows - 1 || trueX == 0 && trueY == rows - 1) {
			return 3;
		}
		
		if(trueX == 0 || trueX == cols - 1 || trueY == 0 || trueY == rows - 1) {
			return 5;
		}
		
		return 8;
	}
	
	private int n_Ls2() {
		
	}

	public int[] getCurrentReading() {
		Random rand = new Random();
		
		int[] ret = new int[2];
		return ret;
	}


	public double getCurrentProb( int x, int y) {
		double ret = 0.0;
		return ret;
	}
	
	public void update() {
		System.out.println("Nothing is happening, no model to go for...");
	}
}